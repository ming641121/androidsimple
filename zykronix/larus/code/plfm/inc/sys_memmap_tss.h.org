/*
 * Copyright (C) 2005, All Rights Reserved, by
 * Ahoya Networks, Inc. San Jose, CA.
 *
 * Abstract:
 *
 *    This file contains the QMC BUFFER prototype
 *
 * Author(s):
 *
 */

#ifndef _SYS_MEMMAP_TSS_H_
#define _SYS_MEMMAP_TSS_H_

#ifdef __cplusplus
extern "C" {
#endif

/*
 *====================================================================
 *=                              define                              =
 *====================================================================
 */

#define FLASH_ADRS_8M		                          0xff800000	/* base address of 8Meg flash */
#define FLASH_ADRS_16M		                          0xff000000	/* base address of 16Meg flash */
#define FLASH_ADRS_32M		                          0xfe000000	/* base address of 32Meg flash */

#define BIT(x)                                        (1 << (x))

/* CS0: BOOT FLASH,   Size 512K, 8 bit port */
#define CS0_START									  0xFFF00000
#define CS0_SIZE 									  0x00080000
#define CS0_END										  (CS0_START + (CS0_SIZE - 1))


#define BOOT_BASE_ADRS                                CS0_START
#define BOOT_SIZE	       	                          CS0_SIZE
#define BOOT_BASE_MASK                                (0xFFF80000)

/* CS1: Disk FLASH,   Size 128M, 64 bit port */
#define CS1_START                                     0xB0000000
#define CS1_SIZE                                      0x08000000
#define CS1_END                                       (CS1_START + (CS1_SIZE - 1))

#define SYS_FLASH_BASE_ADRS                           CS1_START
#define SYS_FLASH_SIZE                                CS1_SIZE
#define SYS_FLASH_BLOCK_SIZE                          0x40000
#define SYS_FLASH_BOOTLINE_OFFSET                     0x0
#define SYS_FLASH_WIDTH   		                      4
#define SYS_FLASH_SIZE_WRITEABLE	                  256		/* reasonable write size */
#define SYS_FLASH_TYPE	       	                      FLASH_28F016	/* Intel flash device type */
#define SYS_FLASH_SIZE_MASK                           0xF8000000

#define FLASH_BASE_ADRS		                          SYS_FLASH_BASE_ADRS  /* this board has 8Meg flash */
#define FLASH_SIZE  	                              SYS_FLASH_SIZE		/* reasonable write size */
#define FLASH_ADRS                                    SYS_FLASH_BASE_ADRS
#define FLASH_BLOCK_SIZE                              SYS_FLASH_BLOCK_SIZE
#define FLASH_BOOTLINE_OFFSET                         SYS_FLASH_BOOTLINE_OFFSET
#define FLASH_WIDTH   		                          SYS_FLASH_WIDTH
#define FLASH_SIZE_WRITEABLE	                      SYS_FLASH_SIZE_WRITEABLE		/* reasonable write size */

/* CS2: System SDRAM, Size 128M, 64 bit port */
#define CS2_START                                     0x00000000
#define CS2_SIZE                                      0x08000000
#define CS2_END                                       (CS2_START + (CS2_SIZE - 1))

/* CS3: RTC,          Size 32B,  8 bit port */
#define CS3_START                                     0x40000000
#define CS3_SIZE                                      0x00000020
#define CS3_END                                       (CS3_START + (CS3_SIZE - 1))

#define CS4

/* CS5: CPLD,          Size 4K,  8 bit port */
#define CS5_START                                     0x40100000
#define CS5_SIZE                                      0x00001000
#define CS5_END                                       (CS5_START + (CS5_SIZE - 1))


/* CS7: FPGA,          Size 4K,  8 bit port */
#define CS7_START                                     0x40200000
#define CS7_SIZE                                      0x00001000
#define CS7_END                                       (CS7_START + (CS7_SIZE - 1))




/*
 *====================================================================
 *=                              typedef                             =
 *====================================================================
 */


/*
 *====================================================================
 *=                              macro                               =
 *====================================================================
 */


/*
 *====================================================================
 *=                              routine                             =
 *====================================================================
 */


#ifdef __cplusplus
}
#endif

#endif /* _SYS_MEMMAP_TSS_H_ */
