#
#  The default configuration file for trilingual (SNMPv1, SNMPv2c, SNMPv3)
#  agents.   This configuration file will work with both EMANATE
#  and EMANATE/lite agents without generating any warnings.
# 
#  Note that any modifications you make to comment lines (i.e., lines
#  beginning with #) will be lost.  The agent rewrites snmpd.cnf whenever
#  it restarts or there is a change in state that is reflected in the
#  contents of snmpd.cnf.
#
#  This is an abbreviated example file, which is installed by default.
#
#  ----------------------------------------------------------------------
#  System and SNMP Group Values:
#
#  sysDescr:  A description of the system.  The value filled in by
#  the agent is generally acceptable.  To specify your own, uncomment
#  the sysDescr line below, and fill in with your own value.
#
# Entry type: sysDescr
# Entry format: octetString
# sysDescr  "International Widgets Model 500 Network Device"
#
#  sysLocation: A description of the location of the system.  You
#  should fill this value in with a quoted string.  Uncomment the
#  sysLocation entry or the value will be lost.
#
# Entry type: sysLocation
# Entry format: octetString
# sysLocation  "Down on the farm"
#
#  sysContact: Who to call when this system needs attention.
#  If this reads "SNMP Research, Inc", you should update it with your
#  system administrator's contact information.
#
# Entry type: sysContact
# Entry format: octetString
sysContact  "SNMP Research Inc., +1 (865) 573-1434, info@snmp.com"
#
#  sysName: The name of this system.  Absent an entry here, the agent
#  will use hostname.
#
# Entry type: sysName
# Entry format: octetString
# sysName  farmhost
#
#  sysObjectID: An object identifier that identifies this system
#  or agent.  The agent will fill in a reasonable value, though if
#  you resell a system, you may want your own value here.
#
# Entry type: sysObjectID 
# Entry format: OID
# sysObjectID snmpResearchEMANATEMasterAgent
#
#  snmpEnableAuthenTraps: Enable authentication error traps.
#  You should do this.
#  
# Entry type: snmpEnableAuthenTraps 
# Entry format: integer
snmpEnableAuthenTraps  1
#
# ----------------------------------------------------------------------
#
#  SNMPv1/SNMPv2c Community String Configuration
#
#  This is an example community string, which corresponds to a frequently
#  encountered default.  The view for this community string is limited
#  in the VACM access tables below.
#
# 
#Entry type: snmpCommunityEntry
#Format:  snmpCommunityIndex  (text)
#         snmpCommunityName  (text)
#         snmpCommunitySecurityName  (text)
#         snmpCommunityContextEngineID  (octetString)
#         snmpCommunityContextName  (text)
#         snmpCommunityTransportTag  (text)
#         snmpCommunityStorageType  (nonVolatile, permanent, readOnly)
snmpCommunityEntry  t0000000 public public localSnmpID - anywhereTag \
	 nonVolatile
#
#  SNMPv3 User Name and Security Group Configuration
#  Note that these users are organized into groups, and the access views
#  (i.e., privileges) are assigned later in this file.
#
#  Note that the authentication and privacy keys are localized when the
#  agent is first run, and will no longer be stored in plaintext.  The
#  keys can be changed at any time by stopping the agent, editting 
#  the configuration file, and restarting the agent.
#
#  Please remove any users that you will not use, and modify the
#  keys to be something other than the defaults supplied here.
#  Not modifying the keys is rather like locking your house, but
#  leaving the key in the lock.
#
#Entry type: usmUserEntry
#Format:  usmUserEngineID  (octetString)
#         usmUserName  (text)
#         usmUserAuthProtocol  (OID)
#         usmUserPrivProtocol  (OID)
#         usmUserStorageType  (nonVolatile, permanent, readOnly)
#         usmTargetTag  (text)
#         AuthKey  (octetString)
#         PrivKey  (octetString)
#
#  "root" and "Administrator" are users that roughly match to the
#  administrative users on Unix and Windows systems.  These entries
#  are intended for use while developing or integrating systems, and
#  should be removed from active systems.
#
usmUserEntry  localSnmpID root usmHMACMD5AuthProtocol \
    usmDESPrivProtocol nonVolatile anywhereTag \
    "authpass" \
    "privpass"
usmUserEntry  localSnmpID Administrator usmHMACMD5AuthProtocol \
    usmDESPrivProtocol nonVolatile anywhereTag \
    "authpass" \
    "privpass"
#
#  A public user is useful for debugging and initial installs.
#  This SNMPv3 user has a very limited view established later.
#
usmUserEntry  localSnmpID public usmNoAuthProtocol \
    usmNoPrivProtocol nonVolatile anywhereTag - -
#
#  Template users used by SNMPv3 Configuration Managers.  These
#  users are intended to be cloned from, and never used per se.
#  EnterPol will look for these users.
#
usmUserEntry  localSnmpID TemplateMD5DES usmHMACMD5AuthProtocol \
    usmDESPrivProtocol nonVolatile nowhere \
    "TemplateMD5DES AuthPassword" \
    "TemplateMD5DES PrivPassword"
usmUserEntry  localSnmpID TemplateSHADES usmHMACSHAAuthProtocol \
    usmDESPrivProtocol nonVolatile nowhere \
    "TemplateSHADES AuthPassword" \
    "TemplateSHADES PrivPassword"
# ----------------------------------------------------------------------
#  
#  User to Group mappings.  Access control is based on which group
#  a USM User belongs to.  This way, users can come and go and easily
#  have passwords changed.  The roles, however, remain unchanged.
#

#Entry type: vacmSecurityToGroupEntry
#Format:  vacmSecurityModel  (snmpv1, snmpv2c, usm)
#         vacmSecurityName  (text)
#         vacmGroupName  (text)
#         vacmSecurityToGroupStorageType  (nonVolatile, permanent, readOnly)

vacmSecurityToGroupEntry  snmpv1 public public nonVolatile
vacmSecurityToGroupEntry  snmpv2c public public nonVolatile
vacmSecurityToGroupEntry  usm public public nonVolatile

#
#  Note that the vacmSecurityToGroup entries for the Template users
#  are deliberately omitted.  These users aren't used for network management,
#  only for USM clone-from operations (i.e., they are copied from when
#  creating a new user.
#
vacmSecurityToGroupEntry  usm root Administrator nonVolatile
vacmSecurityToGroupEntry  usm Administrator Administrator nonVolatile

# ----------------------------------------------------------------------
#  
#  The vacmAccessEntry table is used to associate views with each
#  security group.  Remember, that views are associated with the group
#  a user is in, not with the user itself.
# 
#  (vacmGroupName, vacmAccessContextPrefix, vacmAccessSecurityModel,
#   vacmAccessContextMatch) --> (vacmAccessReadViewName, vacmAccessWriteViewName,
#   vacmAccessNotifyViewName)

#Entry type: vacmAccessEntry
#Format:  vacmGroupName  (text)
#         vacmAccessContextPrefix  (text)
#         vacmAccessSecurityModel  (snmpv1, snmpv2c, usm)
#         vacmAccessSecurityLevel  (noAuthNoPriv, authNoPriv, authPriv)
#         vacmAccessContextMatch  (exact, prefix)
#         vacmAccessReadViewName  (text)
#         vacmAccessWriteViewName  (text)
#         vacmAccessNotifyViewName  (text)
#         vacmAccessStorageType  (nonVolatile, permanent, readOnly)
#
#  public is frequently used for testing while developing and integrating
#  agent environments.  ApplicationsView is essentially the "All" MIB view
#  minus the SNMP administrative tables (for security reasons).
#  If you deploy an agent, we recommend you change ApplicationsView to
#  restrictedView for all public entries (and that you leave the write view
#  empty).
#
vacmAccessEntry  public  - snmpv1 noAuthNoPriv exact ApplicationsView - \
    ApplicationsView nonVolatile
vacmAccessEntry  public  - snmpv2c noAuthNoPriv exact ApplicationsView - \
    ApplicationsView nonVolatile
vacmAccessEntry  public  - usm noAuthNoPriv exact ApplicationsView - \
    ApplicationsView nonVolatile


vacmAccessEntry  Administrator - usm noAuthNoPriv exact restrictedView - \
    restrictedView nonVolatile
vacmAccessEntry  Administrator - usm authNoPriv exact All All All nonVolatile
vacmAccessEntry  Administrator - usm authPriv exact All All All nonVolatile

#
#  If the BRASS Server (SNMP Research management multiplexer, brassd) is
#  installed and running in Subagent mode, configuration tools like the
#  SNMPv3 Configuration Wizard or Simple PolicyPro need to access the
#  local configuration datastore for this process.

vacmAccessEntry  Administrator mgr usm noAuthNoPriv exact restrictedView - - \
    nonVolatile
vacmAccessEntry  Administrator mgr usm authNoPriv exact All All - nonVolatile
vacmAccessEntry  Administrator mgr usm authPriv exact All All - nonVolatile


# ----------------------------------------------------------------------
#  The VacmViewTrees define what is in each named view referred to above.
#
#Entry type: vacmViewTreeFamilyEntry
#Format:  vacmViewTreeFamilyViewName  (text)
#         vacmViewTreeFamilySubtree  (OID)
#         vacmViewTreeFamilyMask  (octetString)
#         vacmViewTreeFamilyType  (included, excluded)
#         vacmViewTreeFamilyStorageType  (nonVolatile, permanent, readOnly)
#
#  The ifEntry entry in restrictedView is an example of instance-based view 
#  limitation.  The HelpDeskView includes all of CIAgent and some other 
#  SNMPRI MIBs.
#  The vacmViewTreeFamilyMask in the All entry (and in some others) is
#  deliberately 0, so that the vacmViewTreeFamilySubtree value iso (1.3)
#  will match anything.  This has become necessary as some MIBS
#  have received registrations outside of the ISO tree.
#
vacmViewTreeFamilyEntry  restrictedView system - included nonVolatile
vacmViewTreeFamilyEntry  restrictedView snmpEngine - included nonVolatile
vacmViewTreeFamilyEntry  restrictedView srExamples - included nonVolatile
vacmViewTreeFamilyEntry  restrictedView snmpTrap - included nonVolatile
vacmViewTreeFamilyEntry  restrictedView snmpTraps - included nonVolatile
vacmViewTreeFamilyEntry  restrictedView srBasics - included nonVolatile
vacmViewTreeFamilyEntry  restrictedView ifEntry.0.2 ff:bf included nonVolatile

vacmViewTreeFamilyEntry  All iso 0 included nonVolatile

vacmViewTreeFamilyEntry  ApplicationsView iso 0 included nonVolatile
vacmViewTreeFamilyEntry  ApplicationsView snmpCommunityTable - excluded \
    nonVolatile
vacmViewTreeFamilyEntry  ApplicationsView vacmAccessTable - excluded \
    nonVolatile
vacmViewTreeFamilyEntry  ApplicationsView vacmSecurityToGroupTable - excluded \
    nonVolatile
vacmViewTreeFamilyEntry  ApplicationsView usmUserTable - excluded \
    nonVolatile
vacmViewTreeFamilyEntry  ApplicationsView vacmViewTreeFamilyTable - excluded  \
    nonVolatile

# ----------------------------------------------------------------------
#  The snmpNotifytable selects snmpTargetAddrtable entries
#  to receive traps or informs.
#
#Entry type: snmpNotifyEntry
#Format:  snmpNotifyName  (text)
#         snmpNotifyTag  (text)
#         snmpNotifyType  (trap(1), inform(2))
#         snmpNotifyStorageType  (nonVolatile, permanent, readOnly)

snmpNotifyEntry  Traps TrapTag trap nonVolatile
snmpNotifyEntry  Informs InformTag inform nonVolatile

# ----------------------------------------------------------------------
#
#  The snmpTargetAddrEntry is used to specify target addresses for
#  notifications, and valid source address ranges for
#  snmpCommunityTable entries and usmUserTable entries.
#
#Entry type: snmpTargetAddrEntry
#Format:  snmpTargetAddrName  (text)
#         snmpTargetAddrTDomain  (snmpUDPDomain, snmpIPXDomain, etc.)
#         snmpTargetAddrTAddress  (transport address,i.e. 192.147.142.254:0)
#         snmpTargetAddrTimeout  (integer)
#         snmpTargetAddrRetryCount  (integer)
#         snmpTargetAddrTagList  (text)
#         snmpTargetAddrParams  (text)
#         snmpTargetAddrStorageType  (nonVolatile, permanent, readOnly)
#         tgtAddressMask (transport mask, i.e. 255.255.255.255:0)
#
#  The following entries direct SNMPv1 and SNMPv2c traps and SNMPv3 informs
#  to the local host.  When used in this fashion, the tgtAddressMask is
#  ignored.  Note that the v2cEcampleParams have a filter in place filtering
#  out all but wellKnownTraps (see snmpNotifyFilterProfileEntry below).
#
snmpTargetAddrEntry  localHostV1 snmpUDPDomain 127.0.0.1:0 100 3 TrapTag \
    v1ExampleParams nonVolatile 255.255.255.255:0
snmpTargetAddrEntry  localHostV2c snmpUDPDomain 127.0.0.1:0 100 3 InformTag \
    v2cExampleParams nonVolatile 255.255.255.255:0
#
#  The following entry sends all generated traps to a machine at SNMP 
#  Research.  Don't enable this unless you have contacted support@snmp.com
#
#snmpTargetAddrEntry  SnmpResearchTrapSink snmpUDPDomain 192.147.142.254:0 100 \
#     3 TrapTag v3ExampleParams nonVolatile 255.255.255.255:0
#
#  The following entries are used by the snmpCommunityEntry and
#  usmUserEntries to restrict from which hosts SNMP requests are honored.
#  We honor the tgtAddressMask for both USM and non-USM requests.
#  In the HelpDesk example below, the addresses [10.1.3.128-143] are selected.
#
snmpTargetAddrEntry  anywhere snmpUDPDomain 0.0.0.0:0 0 0 \
    anywhereTag none nonVolatile 0.0.0.0:0
snmpTargetAddrEntry  HelpDesk snmpUDPDomain 10.1.3.128:0 0 0 \
    HelpDeskTag none nonVolatile 255.255.255.240:0

# ----------------------------------------------------------------------
#
#  The snmpTargetParamsTable specifies what SNMP version, security name,
#  and security level should be used with notifications.
#
#Entry type: snmpTargetParamsEntry
#Format:  snmpTargetParamsName  (text)
#         snmpTargetParamsMessageProcessingModel  (integer)
#         snmpTargetParamsSecurityModel  (snmpv1, snmpv2c, usm)
#         snmpTargetParamsSecurityName  (text)
#         snmpTargetParamsSecurityLevel  (noAuthNoPriv,authNoPriv,authPriv)
#         snmpTargetParamsStorageType  (nonVolatile, permanent, readOnly)
#
snmpTargetParamsEntry  v1ExampleParams 0 snmpv1 public noAuthNoPriv \
    nonVolatile
snmpTargetParamsEntry  v2cExampleParams 1 snmpv2c public noAuthNoPriv \
    nonVolatile
snmpTargetParamsEntry  v3ExampleParams 3 usm root authNoPriv \
    nonVolatile

# ----------------------------------------------------------------------
#  
#  The snmpNotifyFilterProfileEntry is used to specify which 
#  snmpNotifyFilterEntry is to be used with notifications generated
#  with a particular snmpTargetParamsName.  This table is used to
#  do source squelching of notifications.  This particular example
#  limits SNMPv1 notifications to the well known traps (i.e., 
#  coldStart, warmStart, authenticationFailure, etc).
#
#Entry type: snmpNotifyFilterProfileEntry
#Format:  snmpTargetParamsName  (text)
#         snmpNotifyFilterProfileName  (text)
#         snmpNotifyFilterProfileStorageType  (nonVolatile,permanent,readOnly)

snmpNotifyFilterProfileEntry v1ExampleParams wellKnownTraps nonVolatile

# ----------------------------------------------------------------------
#
#  The snmpNotifyFilterEntry specifies the restrictions on which notifications
#  should be sent to targets implied by the snmpNotifyFilterProfileEntry
#  that selected it.
#
#Entry type: snmpNotifyFilterEntry
#Format:  snmpNotifyFilterProfileName  (text)
#         snmpNotifyFilterSubtree  (OID)
#         snmpNotifyFilterMask  (octetString)
#         snmpNotifyFilterType  (included, excluded)
#         snmpNotifyFilterStorageType  (nonVolatile, permanent, readOnly)

snmpNotifyFilterEntry wellKnownTraps snmpTraps - included nonVolatile
#
# - end of example configuration file -
