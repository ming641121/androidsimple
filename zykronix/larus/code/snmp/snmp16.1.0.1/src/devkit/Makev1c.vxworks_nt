
#
#
# Copyright (C) 1992-2003 by SNMP Research, Incorporated.
#
# This software is furnished under a license and may be used and copied
# only in accordance with the terms of such license and with the
# inclusion of the above copyright notice. This software or any other
# copies thereof may not be provided or otherwise made available to any
# other person. No title to and ownership of the software is hereby
# transferred.
#
# The information in this software is subject to change without notice
# and should not be construed as a commitment by SNMP Research, Incorporated.
#
# Restricted Rights Legend:
#  Use, duplication, or disclosure by the Government is subject to
#  restrictions as set forth in subparagraph (c)(1)(ii) of the Rights
#  in Technical Data and Computer Software clause at DFARS 252.227-7013;
#  subparagraphs (c)(4) and (d) of the Commercial Computer
#  Software-Restricted Rights Clause, FAR 52.227-19; and in similar
#  clauses in the NASA FAR Supplement and other corresponding
#  governmental regulations.
#
#

#
#                PROPRIETARY NOTICE
#
# This software is an unpublished work subject to a confidentiality agreement
# and is protected by copyright and trade secret law.  Unauthorized copying,
# redistribution or other use of this work is prohibited.
#
# The above notice of copyright on this source code product does not indicate
# any actual or intended publication of such source code.
#
#


TOPDIR = ..

# 
# Operating System Information
#

MOVE = move
RMDIR = rmdir
RM = del
CP = copy
CAT = type
# PRESERVE is the flag to $(CP) to duplicate the modification time and
# permission modes of the original file or directory.
PRESERVE =

# Extensions to certain kinds of files are set here.
LIBEXT = a
BINEXT =
OBJEXT = o


LIBPRF = lib


 VX_VW_BASE = $(WIND_BASE)\target
VX_HSP_BASE = $(WIND_BASE)\host\$(WIND_HOST_TYPE)

         OS = -DSR_VXWORKS
         os = vxworks_nt

  SR_OSTYPE = -DCPU=4
    OSFLAGS =
    HOST_OS = w32
 EXTRA_DEFS =

         CC = $(VX_HSP_BASE)\bin\ccppc
 DEBUGFLAGS = -g
         LD = $(VX_HSP_BASE)\bin\ldppc -r
         AR = $(VX_HSP_BASE)\bin\arppc
     AROPTS = clr
     RANLIB = $(VX_HSP_BASE)\bin\ranlibppc

    ARC_INC_DIRS = -I$(VX_VW_BASE)\h
IPC_DEFAULT = -DSR_TCP_IPC
IPC_DEFAULT_LIB = tcp


#
# Subordinant Makefile
#


BMFN_V1 = 1

BMFN_V2c = c

BMFN_V3 =

BASEMAKEFILENAME = Makev$(BMFN_V1)$(BMFN_V2c)$(BMFN_V3)


SUBMAKEFILE = $(BASEMAKEFILENAME).$(os)
#
# Directories
#


OBD_V1 = 1

OBD_V2c = c

OBD_V3 =

OSBASEDIR = v$(OBD_V1)$(OBD_V2c)$(OBD_V3)


OSLIBDIR = $(os)$(OSBASEDIR).lib
OSOBJDIR = $(os)$(OSBASEDIR).obj
OSBINDIR = $(os)$(OSBASEDIR).bin

SECUR_DIR = $(TOPDIR)\..\basic

LIBDIR      = $(SECUR_DIR)\$(OSLIBDIR)
BINDIR      = $(SECUR_DIR)\$(OSBINDIR)
INSTALLDIR  = $(SECUR_DIR)\$(OSBINDIR)
MIBS_DIR    = $(TOPDIR)\mibs
RFCS_DIR    = $(TOPDIR)\mibs\rfcs
IANA_DIR    = $(TOPDIR)\mibs\iana
MIBCOMP_DIR = $(SECUR_DIR)\$(HOST_OS).bin

#
# Make Command
#

MAKECMD = make -f $(SUBMAKEFILE)
#
# Compile Commands
#


CORULE = $(CC) -c $(OSFLAGS) $(CFLAGS) -o $@ $<
REMOTERULE = $(CC) -c $(OSFLAGS) $(CFLAGS) -o $@ $<
YACCRULE = $(CC) -c $(OSFLAGS) $(CFLAGS) -o $@ $(@F:.o=.c)


#
# Build Options
#

#
# Compile Options
#

LIGHT = -DNOTICE
DEBUG = -DSR_DEBUG
SR_MIB_TABLE_HASHING = -DSR_MIB_TABLE_HASHING
SR_CONFIG_FP = -DSR_CONFIG_FP
PROXY =
SETS = -DSETS
WEB_AGT =
WEB_MGR =

CUSTOMER_DEFINES =

EPIC =
EPICTEST =

EXPORT = -DSR_UNSECURABLE

SNMP_V1_PACKET = -DSR_SNMPv1_PACKET -DSR_SNMPv1_WRAPPER

SNMP_V2C_PACKET = -DSR_SNMPv2c_PACKET -DSR_SNMPv1_WRAPPER -DSR_SNMPv2_PDU

SNMP_V1_PACKET_MIB = -DSR_SNMPv1_PACKET_MIB

SNMP_V3_PACKET =
SNMP_V3_PACKET_MIB =

SYS_OR_TABLE =

TRANSPORT_TABLE = -DSR_TRANSPORT_TABLE


NOTIFY_COMPLIANCE_LEVEL = \
	-DSR_NOTIFY_FULL_COMPLIANCE

PROXY_COMPLIANCE_LEVEL =

SNMPV3_COMPLIANCE_OPTIONS = \
	$(NOTIFY_COMPLIANCE_LEVEL) \
	$(PROXY_COMPLIANCE_LEVEL)

USER_SEC_MODEL = -DSR_USER_SEC_MODEL

SUPPORTED_SECURITY_MODELS = \
	$(USER_SEC_MODEL)

3DES_PRIVACY_PROTOCOL =
AES_PRIVACY_PROTOCOL =

SUPPORTED_PRIVACY_PROTOCOLS = \
	$(3DES_PRIVACY_PROTOCOL) \
	$(AES_PRIVACY_PROTOCOL)


MD5_HASH_ALGORITHM = -DSR_MD5_HASH_ALGORITHM
SHA_HASH_ALGORITHM = -DSR_SHA_HASH_ALGORITHM

SUPPORTED_HASHING_ALGORITHMS = \
	$(SHA_HASH_ALGORITHM) \
	$(MD5_HASH_ALGORITHM)

SNMP_ADMINISTRATIVE_FRAMEWORK_VERSION = -DSR_SNMPv1_ADMIN

SNMP_ADMINISTRATIVE_MIB_SUPPORT = -DSR_SNMP_ADMIN_MIB

SUPPORTED_PACKET_VERSIONS = \
	$(SNMP_V1_PACKET) \
	$(SNMP_V2C_PACKET) \
	$(SNMP_V3_PACKET)

SUPPORTED_PACKET_MIBS = \
	$(SNMP_V1_PACKET_MIB) \
	$(SNMP_V3_PACKET_MIB)

SUPPORTED_APO_LEVEL =

GENERATE_CONFIGURATION = \
	-DSR_GENERATE_CONFIGURATION \
	-DSR_GENERATE_SNMPV3_CONFIGURATION
#	-DSR_GENERATE_OLD_STYLE_CONFIGURATION

SNMP_OPTIONS = \
	$(CUSTOMER_DEFINES)  \
	$(EXPORT) \
	$(SYS_OR_TABLE) \
	$(TRANSPORT_TABLE) \
	$(SUPPORTED_PACKET_VERSIONS) \
	$(SUPPORTED_PACKET_MIBS) \
	$(SUPPORTED_APO_LEVEL) \
	$(SUPPORTED_SECURITY_MODELS) \
	$(SUPPORTED_PRIVACY_PROTOCOLS) \
	$(SUPPORTED_HASHING_ALGORITHMS) \
	$(SNMPV3_COMPLIANCE_OPTIONS) \
	$(SNMP_ADMINISTRATIVE_FRAMEWORK_VERSION) \
	$(SNMP_ADMINISTRATIVE_MIB_SUPPORT) \
	$(EPIC) $(EPICTEST) \
	$(GENERATE_CONFIGURATION)


#
# Transports
#

IP_TRANSPORT = -DSR_IP

IPX_TRANSPORT =

TRANSPORTS = $(IP_TRANSPORT) $(IPX_TRANSPORT)


ELINES =

DEFS = \
        $(OS) \
        $(SR_OSTYPE) \
        $(NETTYPE) \
        $(DEBUG) \
        $(LIGHT) \
	$(SNMP_OPTIONS) \
        $(PROXY) \
        $(SYSOPTS) \
        $(ELINES) \
        $(TRANSPORTS) \
	$(WEB_AGT) \
	$(WEB_MGR) \
	$(SR_CONFIG_FP) $(EXTRA_DEFS)

LDFLAGS =

#
# Structure Information
#

SR_INCDIR = $(TOPDIR)\include
INCLUDES = \
	-I$(SR_INCDIR) \
	-I. \
	-I$(TOPDIR)\snmpd\mibs \
	$(ARC_INC_DIRS)

#
# What to build
#

K_IO_C = k_fileio.c
K_IO_O = $(OSOBJDIR)\k_fileio.$(OBJEXT)


SNMPSRCS = \
	dbcompat.c \
	debug.c \
	compat.c \
	findlen.c \
	free_lib.c \
	frmt_lib.c \
	fullpath.c \
	gettime.c \
	getport.c \
	globalvr.c \
	globalog.c \
	lookup.c \
	make_lib.c \
	oid_lib.c \
	prnt_lib.c \
	nvt_chk.c \
	fmtvb.c \
	nrmvblst.c \
	ntfy_oid.c \
	ct_old.c \
	ct_oid.c \
	ct_os.c \
	ct_tos.c \
	scanfile.c \
	sr_endia.c \
	sr_snb.c \
	sr_queue.c \
	tdomain.c \
	sigfunc.c \
	tc_time.c \
	trans.c \
	t_ip.c \
	v2table.c \
	$(K_IO_C) \
	vbtable.c \
	sr_math.c

SNMPOBJS_1 = \
	$(OSOBJDIR)\dbcompat.$(OBJEXT) \
	$(OSOBJDIR)\debug.$(OBJEXT) \
	$(OSOBJDIR)\compat.$(OBJEXT) \
	$(OSOBJDIR)\findlen.$(OBJEXT) \
	$(OSOBJDIR)\free_lib.$(OBJEXT) \
	$(OSOBJDIR)\frmt_lib.$(OBJEXT) \
	$(OSOBJDIR)\fullpath.$(OBJEXT) \
	$(OSOBJDIR)\gettime.$(OBJEXT) \
	$(OSOBJDIR)\getport.$(OBJEXT) \
	$(OSOBJDIR)\globalvr.$(OBJEXT) \
	$(OSOBJDIR)\globalog.$(OBJEXT) \
	$(OSOBJDIR)\lookup.$(OBJEXT) \
	$(OSOBJDIR)\make_lib.$(OBJEXT) \
	$(OSOBJDIR)\oid_lib.$(OBJEXT) \
	$(OSOBJDIR)\prnt_lib.$(OBJEXT) \
	$(OSOBJDIR)\fmtvb.$(OBJEXT) \
	$(OSOBJDIR)\nrmvblst.$(OBJEXT) \
	$(OSOBJDIR)\nvt_chk.$(OBJEXT) \
	$(OSOBJDIR)\ntfy_oid.$(OBJEXT) \
	$(OSOBJDIR)\ct_old.$(OBJEXT) \
	$(OSOBJDIR)\ct_oid.$(OBJEXT) \
	$(OSOBJDIR)\ct_os.$(OBJEXT) \
	$(OSOBJDIR)\ct_tos.$(OBJEXT) \
	$(OSOBJDIR)\sr_endia.$(OBJEXT) \
	$(OSOBJDIR)\sr_snb.$(OBJEXT) \
	$(OSOBJDIR)\sr_queue.$(OBJEXT) \
	$(OSOBJDIR)\scanfile.$(OBJEXT)

SNMPOBJS_2 = \
	$(OSOBJDIR)\tdomain.$(OBJEXT) \
	$(OSOBJDIR)\sigfunc.$(OBJEXT) \
	$(OSOBJDIR)\tc_time.$(OBJEXT) \
	$(OSOBJDIR)\trans.$(OBJEXT) \
	$(OSOBJDIR)\t_ip.$(OBJEXT) \
	$(OSOBJDIR)\v2table.$(OBJEXT) \
	$(K_IO_O) \
	$(OSOBJDIR)\vbtable.$(OBJEXT) \
	$(OSOBJDIR)\sr_math.$(OBJEXT)

SNMPOBJS = $(SNMPOBJS_1) $(SNMPOBJS_2)


#
# How to build
#

COPTIONS = $(DEFS) $(INCLUDES) 

CFLAGS =  $(DEBUGFLAGS) $(COPTIONS)


all: \
	$(LIBDIR) \
	$(OSOBJDIR) \
	$(SOURCELINKS) \
	$(LIBDIR)\libdevkit.$(LIBEXT)

$(LIBDIR):
	-mkdir $(LIBDIR)

$(OSOBJDIR):
	-mkdir $(OSOBJDIR)


$(LIBDIR)\libdevkit.$(LIBEXT): $(SNMPOBJS)
	$(AR) $(AROPTS) $(LIBDIR)\libdevkit.$(LIBEXT) $(SNMPOBJS)
	$(RANLIB) $(LIBDIR)\libdevkit.$(LIBEXT)


LINTFLAGS = $(DEFS) $(COPTIONS) $(DEBUGFLAGS)
LINTLIBNAME = devkit
LINTLIBNAMEEXT = .ln

lint: $(LIBDIR) $(LIBDIR)\$(LLIB)devkit.ln

$(LIBDIR)\$(LLIB)devkit.ln: $(SNMPSRCS)
	$(LINT) $(LINTOPTS) $(LINTLIBOPT)$(LINTLIBNAME) $(LINTFLAGS) $(SNMPSRCS)
	$(MOVE) $(LLIB)$(LINTLIBNAME)$(LINTLIBNAMEEXT) $(LIBDIR)

clean:
	-$(RM) $(OSOBJDIR)\*.$(OBJEXT)
	-$(RM) $(LIBDIR)\libdevkit.$(LIBEXT)
	-$(RM) $(LIBDIR)\$(LLIB)devkit.ln
	-$(RMDIR) $(OSOBJDIR)


$(OSOBJDIR)\sr_endia.$(OBJEXT): sr_endia.c
	$(CORULE)

$(OSOBJDIR)\dbcompat.$(OBJEXT): dbcompat.c
	$(CORULE)

$(OSOBJDIR)\debug.$(OBJEXT): debug.c
	$(CORULE)

$(OSOBJDIR)\compat.$(OBJEXT): compat.c
	$(CORULE)

$(OSOBJDIR)\findlen.$(OBJEXT): findlen.c
	$(CORULE)

$(OSOBJDIR)\free_lib.$(OBJEXT): free_lib.c
	$(CORULE)

$(OSOBJDIR)\frmt_lib.$(OBJEXT): frmt_lib.c
	$(CORULE)

$(OSOBJDIR)\fullpath.$(OBJEXT): fullpath.c
	$(CORULE)

$(OSOBJDIR)\gettime.$(OBJEXT): gettime.c
	$(CORULE)

$(OSOBJDIR)\getport.$(OBJEXT): getport.c
	$(CORULE)

$(OSOBJDIR)\globalog.$(OBJEXT): globalog.c
	$(CORULE)

$(OSOBJDIR)\globalvr.$(OBJEXT): globalvr.c
	$(CORULE)

$(OSOBJDIR)\lookup.$(OBJEXT): lookup.c
	$(CORULE)

$(OSOBJDIR)\make_lib.$(OBJEXT): make_lib.c
	$(CORULE)

$(OSOBJDIR)\oid_lib.$(OBJEXT): oid_lib.c
	$(CORULE)

$(OSOBJDIR)\prnt_lib.$(OBJEXT): prnt_lib.c
	$(CORULE)

$(OSOBJDIR)\fmtvb.$(OBJEXT): fmtvb.c
	$(CORULE)

$(OSOBJDIR)\ntfy_oid.$(OBJEXT): ntfy_oid.c
	$(CORULE)

$(OSOBJDIR)\nvt_chk.$(OBJEXT): nvt_chk.c
	$(CORULE)

$(OSOBJDIR)\nrmvblst.$(OBJEXT): nrmvblst.c
	$(CORULE)

$(OSOBJDIR)\ct_old.$(OBJEXT): ct_old.c
	$(CORULE)

$(OSOBJDIR)\ct_oid.$(OBJEXT): ct_oid.c
	$(CORULE)

$(OSOBJDIR)\ct_os.$(OBJEXT): ct_os.c
	$(CORULE)

$(OSOBJDIR)\ct_tos.$(OBJEXT): ct_tos.c
	$(CORULE)

$(OSOBJDIR)\scanfile.$(OBJEXT): scanfile.c
	$(CORULE)

$(OSOBJDIR)\sr_snb.$(OBJEXT): sr_snb.c
	$(CORULE)

$(OSOBJDIR)\sr_queue.$(OBJEXT): sr_queue.c
	$(CORULE)


$(OSOBJDIR)\tdomain.$(OBJEXT): tdomain.c
	$(CORULE)

$(OSOBJDIR)\cacheid.$(OBJEXT): cacheid.c
	$(CORULE)


$(OSOBJDIR)\vbtable.$(OBJEXT): vbtable.c
	$(CORULE)


$(OSOBJDIR)\sr_math.$(OBJEXT): sr_math.c
	$(CORULE)

$(OSOBJDIR)\sigfunc.$(OBJEXT): sigfunc.c
	$(CORULE)


$(OSOBJDIR)\trans.$(OBJEXT): trans.c
	$(CORULE)

$(OSOBJDIR)\t_ip.$(OBJEXT): t_ip.c
	$(CORULE)


$(OSOBJDIR)\tc_time.$(OBJEXT): tc_time.c
	$(CORULE)

$(OSOBJDIR)\v2table.$(OBJEXT): v2table.c
	$(CORULE)


$(OSOBJDIR)\k_fileio.$(OBJEXT): k_fileio.c
	$(CORULE)


