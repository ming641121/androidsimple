/*
 *
 * Copyright (C) 1992-2003 by SNMP Research, Incorporated.
 *
 * This software is furnished under a license and may be used and copied
 * only in accordance with the terms of such license and with the
 * inclusion of the above copyright notice. This software or any other
 * copies thereof may not be provided or otherwise made available to any
 * other person. No title to and ownership of the software is hereby
 * transferred.
 *
 * The information in this software is subject to change without notice
 * and should not be construed as a commitment by SNMP Research, Incorporated.
 *
 * Restricted Rights Legend:
 *  Use, duplication, or disclosure by the Government is subject to
 *  restrictions as set forth in subparagraph (c)(1)(ii) of the Rights
 *  in Technical Data and Computer Software clause at DFARS 252.227-7013;
 *  subparagraphs (c)(4) and (d) of the Commercial Computer
 *  Software-Restricted Rights Clause, FAR 52.227-19; and in similar
 *  clauses in the NASA FAR Supplement and other corresponding
 *  governmental regulations.
 *
 */

/*
 *                PROPRIETARY NOTICE
 *
 * This software is an unpublished work subject to a confidentiality agreement
 * and is protected by copyright and trade secret law.  Unauthorized copying,
 * redistribution or other use of this work is prohibited.
 *
 * The above notice of copyright on this source code product does not indicate
 * any actual or intended publication of such source code.
 */


/*
 * Arguments used to create this file:
 * -o snmp -separate_type_file 
 */

/*
 * automatically generated by the mib compiler -- do not edit
 */

#ifndef SR_SNMPTYPE_H
#define SR_SNMPTYPE_H


#ifdef __cplusplus
extern "C" {
#endif



/*
 * The system family. 
 */


typedef
struct _system_t {
        OctetString     *sysDescr;
        OID             *sysObjectID;
        char            valid[1];
} system_t;


/*
 * The sts58kSystem family. 
 */


typedef
struct _sts58kSystem_t {
        OctetString     *sts58kSystemId;
        SR_INT32        sts58kSystemMgmtIpOption;
        SR_UINT32       sts58kSystemMgmtIpAddress;
        SR_UINT32       sts58kSystemMgmtIpSubnetMask;
        SR_UINT32       sts58kSystemMgmtIpGatewayAddress;
        SR_INT32        sts58kSystemSntpIpOption;
        SR_UINT32       sts58kSystemSntpIpAddress;
        SR_UINT32       sts58kSystemSntpIpSubnetMask;
        SR_UINT32       sts58kSystemSntpIpGatewayAddress;
        OctetString     *sts58kSystemTime;
        SR_INT32        sts58kSystemTimeZone;
        SR_INT32        sts58kSystemIntegratedAlarm;
        SR_INT32        sts58kSystemAlarmAcoMode;
        SR_INT32        sts58kSystemAlarmAcoLed;
        SR_INT32        sts58kSystemAlarmAcoCutOff;
        SR_INT32        sts58kSystemAlarmEscalatingTime;
        SR_INT32        sts58kSystemMinorLED;
        SR_INT32        sts58kSystemMajorLED;
        SR_INT32        sts58kSystemCriticalLED;
        SR_INT32        sts58kSystemUpgradeSWAction;
        OctetString     *sts58kSystemCurrentSWVersion;
        SR_INT32        sts58kSystemServiceState;
        SR_INT32        sts58kSystemWarmReset;
        SR_INT32        sts58kSystemColdReset;
        SR_INT32        sts58kSystemConfigReset;
        char            valid[4];
} sts58kSystem_t;


/*
 * The sts58kClockInput family. 
 */


typedef
struct _sts58kClockInput_t {
        SR_INT32        sts58kClockInputManualSelect;
        SR_INT32        sts58kClockInputOperMode;
        SR_INT32        sts58kClockInputProtectedPri;
        SR_INT32        sts58kClockInputSetSlip;
        SR_INT32        sts58kClockInputType;
        char            valid[1];
} sts58kClockInput_t;


/*
 * The sts58kClockInputSSM family. 
 */


typedef
struct _sts58kClockInputSSM_t {
        SR_INT32        sts58kClockInputSSMSelect;
        char            valid[1];
} sts58kClockInputSSM_t;


/*
 * The sts58kTop family. 
 */


typedef
struct _sts58kTop_t {
        SR_INT32        sts58kTopSourceIpOption;
        SR_UINT32       sts58kTopSourceIpAddress;
        SR_UINT32       sts58kTopSourceIpSubnetMask;
        SR_UINT32       sts58kTopSourceIpGatewayAddress;
        SR_INT32        sts58kTopPacketRate;
        SR_INT32        sts58kTopInputSelect;
        SR_INT32        sts58kTopTxPackets;
        SR_INT32        sts58kTopTxBytes;
        char            valid[2];
} sts58kTop_t;


/*
 * The sts58kClockInputStatusEntry family. 
 */


typedef
struct _sts58kClockInputStatusEntry_t {
        SR_INT32        sts58kClockInputStatusIndex;
        SR_INT32        sts58kClockInputState;
        char            valid[1];
} sts58kClockInputStatusEntry_t;


/*
 * The sts58kClockInputSSMEntry family. 
 */


typedef
struct _sts58kClockInputSSMEntry_t {
        SR_INT32        sts58kClockInputSSMIndex;
        SR_INT32        sts58kClockInputSSMType;
        SR_INT32        sts58kClockInputSSMValue;
        char            valid[1];
} sts58kClockInputSSMEntry_t;


/*
 * The sts58kCardEntry family. 
 */


typedef
struct _sts58kCardEntry_t {
        SR_INT32        sts58kCardShelf;
        SR_INT32        sts58kCardIndex;
        SR_INT32        sts58kCardType;
        OctetString     *sts58kCardDescr;
        OctetString     *sts58kCardSerial;
        OctetString     *sts58kCardHwVersion;
        OctetString     *sts58kCardCLEICode;
        SR_INT32        sts58kCardOperStatus;
        SR_INT32        sts58kCardReset;
        char            valid[2];
} sts58kCardEntry_t;


/*
 * The sts58kOscillatorEntry family. 
 */


typedef
struct _sts58kOscillatorEntry_t {
        SR_INT32        sts58kOscillatorIndex;
        SR_INT32        sts58kOscillatorModuleType;
        OctetString     *sts58kOscillatorEFER;
        OctetString     *sts58kOscillatorESSD;
        OctetString     *sts58kOscillatorESSN;
        OctetString     *sts58kOscillatorFAGE;
        OctetString     *sts58kOscillatorTIMD;
        SR_INT32        sts58kOscillatorSetActive;
        SR_INT32        sts58kOscillatorStatus;
        char            valid[2];
} sts58kOscillatorEntry_t;


/*
 * The sts58kGpsEntry family. 
 */


typedef
struct _sts58kGpsEntry_t {
        SR_INT32        sts58kGpsIndex;
        SR_INT32        sts58kGpsStatus;
        OctetString     *sts58kGpsANTD;
        OctetString     *sts58kGpsAZEL;
        OctetString     *sts58kGpsRSTG;
        OctetString     *sts58kGpsBITS;
        OctetString     *sts58kGpsPAVG;
        OctetString     *sts58kGpsSIGQ;
        OctetString     *sts58kGpsSPOS;
        OctetString     *sts58kGpsTRMO;
        OctetString     *sts58kGpsUTCT;
        OctetString     *sts58kGpsVERS;
        OctetString     *sts58kGpsDETF;
        OctetString     *sts58kGpsEFER;
        OctetString     *sts58kGpsESSD;
        OctetString     *sts58kGpsESSN;
        OctetString     *sts58kGpsFAGE;
        OctetString     *sts58kGpsTIMD;
        SR_INT32        sts58kGpsReset;
        char            valid[3];
} sts58kGpsEntry_t;


/*
 * The sts58kLinkEntry family. 
 */


typedef
struct _sts58kLinkEntry_t {
        SR_INT32        sts58kLinkIndex;
        SR_INT32        sts58kLinkType;
        SR_INT32        sts58kLinkEnable;
        SR_INT32        sts58kLinkLineCode;
        SR_INT32        sts58kLinkFMT;
        SR_INT32        sts58kLinkTermination;
        SR_INT32        sts58kLinkMFCHK;
        OctetString     *sts58kLinkId;
        char            valid[2];
} sts58kLinkEntry_t;


/*
 * The sts58kShelfEntry family. 
 */


typedef
struct _sts58kShelfEntry_t {
        SR_INT32        sts58kShelfIndex;
        OctetString     *sts58kShelfSerial;
        OctetString     *sts58kShelfCLEICode;
        SR_INT32        sts58kShelfReset;
        char            valid[1];
} sts58kShelfEntry_t;


/*
 * The sts58kAlarmThresholdEntry family. 
 */


typedef
struct _sts58kAlarmThresholdEntry_t {
        SR_INT32        sts58kAlarmThresholdCurrentMon;
        SR_INT32        sts58kAlarmThresholdType;
        SR_INT32        sts58kAlarmThresholdValue;
        SR_INT32        sts58kAlarmThresholdTimeInterval;
        char            valid[1];
} sts58kAlarmThresholdEntry_t;


/*
 * The sts58kLinkAlarmEntry family. 
 */


typedef
struct _sts58kLinkAlarmEntry_t {
        SR_INT32        sts58kLinkAlarmSettingLinkType;
        SR_INT32        sts58kLinkAlarmSettingType;
        SR_INT32        sts58kLinkAlarmSettingSevirity;
        SR_INT32        sts58kLinkAlarmSevirity;
        char            valid[1];
} sts58kLinkAlarmEntry_t;


/*
 * The sts58kOscillatorAlarmEntry family. 
 */


typedef
struct _sts58kOscillatorAlarmEntry_t {
        SR_INT32        sts58kOscillatorAlarmSettingClock;
        SR_INT32        sts58kOscillatorAlarmSettingType;
        SR_INT32        sts58kOscillatorAlarmSettingSeverity;
        SR_INT32        sts58kOscillatorAlarmSeverity;
        char            valid[1];
} sts58kOscillatorAlarmEntry_t;


/*
 * The sts58kOsPwrAlarmEntry family. 
 */


typedef
struct _sts58kOsPwrAlarmEntry_t {
        SR_INT32        sts58ksPwrAlarmSettingShelf;
        SR_INT32        sts58kOsPwrAlarmSettingOsPwr;
        SR_INT32        sts58kOsPwrAlarmSettingSeverity;
        SR_INT32        sts58kOsPwrAlarmSeverity;
        char            valid[1];
} sts58kOsPwrAlarmEntry_t;


/*
 * The sts58kOutputAlarmEntry family. 
 */


typedef
struct _sts58kOutputAlarmEntry_t {
        SR_INT32        sts58kOutputAlarmSettingShelf;
        SR_INT32        sts58kOutputAlarmSettingSlot;
        SR_INT32        sts58kOutputAlarmSettingPort;
        SR_INT32        sts58kOutputAlarmSettingType;
        SR_INT32        sts58kOutputAlarmSettingSeverity;
        SR_INT32        sts58kOutputAlarmSeverity;
        char            valid[1];
} sts58kOutputAlarmEntry_t;


/*
 * The sts58kOutputTiuSettingEntry family. 
 */


typedef
struct _sts58kOutputTiuSettingEntry_t {
        SR_INT32        sts58kOutputTiuSettingShelf;
        SR_INT32        sts58kOutputTiuSettingSlot;
        SR_INT32        sts58kOutputTiuSettingPort;
        SR_INT32        sts58kOutputTiuSettingLineCoding;
        SR_INT32        sts58kOutputTiuSettingFMT;
        SR_INT32        sts58kOutputTiuSettingTermination;
        char            valid[1];
} sts58kOutputTiuSettingEntry_t;


/*
 * The sts58kPerfMonEntry family. 
 */


typedef
struct _sts58kPerfMonEntry_t {
        SR_INT32        sts58kPerfMonInputCurrentMon;
        SR_INT32        sts58kPerfMonInputMonPeriod;
        SR_INT32        sts58kPerfMonInputMonBucket;
        SR_INT32        sts58kPerfMonInputClockType;
        SR_INT32        sts58kPerfMonPerfCVL;
        SR_INT32        sts58kPerfMonPerfCVP;
        SR_INT32        sts58kPerfMonPerfCS;
        SR_INT32        sts58kPerfMonPerfESP;
        SR_INT32        sts58kPerfMonPerfJitter;
        OctetString     *sts58kPerfMonPerfPhaseData;
        SR_INT32        sts58kPerfMonPerfSESP;
        SR_INT32        sts58kPerfMonPerfTIE;
        SR_INT32        sts58kPerfMonPerfMTIE;
        SR_INT32        sts58kPerfMonPerfWDR5M;
        SR_INT32        sts58kPerfMonPerfWDR24H;
        char            valid[2];
} sts58kPerfMonEntry_t;


/*
 * The sts58kAlarmStatusEntry family. 
 */


typedef
struct _sts58kAlarmStatusEntry_t {
        SR_INT32        sts58kAlarmSource;
        SR_INT32        sts58kAlarmSourceType;
        SR_INT32        sts58kAlarmSeverity;
        SR_INT32        sts58kAlarmSrvEff;
        char            valid[1];
} sts58kAlarmStatusEntry_t;


/*
 * The sts58kOutputCardEntry family. 
 */


typedef
struct _sts58kOutputCardEntry_t {
        SR_INT32        sts58kOutputShelf;
        SR_INT32        sts58kOutputSlot;
        SR_INT32        sts58kOutputRedState;
        SR_INT32        sts58kOutputRedSwitchState;
        SR_INT32        sts58kOutputCRCCHK;
        SR_INT32        sts58kOutputCAS;
        SR_INT32        sts58kOutputSSM;
        SR_INT32        sts58kOutputSSMValue;
        OctetString     *sts58kOutputTimingFormat;
        char            valid[2];
} sts58kOutputCardEntry_t;


/*
 * The sts58kEmmStatusEntry family. 
 */


typedef
struct _sts58kEmmStatusEntry_t {
        SR_INT32        sts58kEmmShelf;
        SR_INT32        sts58kEmmUnitId;
        SR_INT32        sts58kEmmSensorType;
        SR_INT32        sts58kEmmAlarmStatus;
        SR_INT32        sts58kEmmSensorReading;
        SR_INT32        sts58kEmmMajorAlmHiThresh;
        SR_INT32        sts58kEmmMajorAlmLoThresh;
        SR_INT32        sts58kEmmMinorAlmHiThresh;
        SR_INT32        sts58kEmmMinorAlmLoThresh;
        char            valid[2];
} sts58kEmmStatusEntry_t;


/*
 * The sts58kAntEntry family. 
 */


typedef
struct _sts58kAntEntry_t {
        SR_INT32        sts58kAntIndex;
        SR_INT32        sts58kAntStatus;
        SR_INT32        sts58kAntSwitchState;
        char            valid[1];
} sts58kAntEntry_t;


/*
 * The sts58kTopDestEntry family. 
 */


typedef
struct _sts58kTopDestEntry_t {
        SR_INT32        sts58kTopDestNumber;
        SR_UINT32       sts58kTopDestIp;
        SR_INT32        sts58kTopDestUdpPort;
        SR_INT32        sts58kTopDestVlanId;
        char            valid[1];
} sts58kTopDestEntry_t;


/*
 * The sts58kTrapRegEntry family. 
 */


typedef
struct _sts58kTrapRegEntry_t {
        SR_INT32        sts58kTrapRegMgrNumber;
        SR_UINT32       sts58kTrapRegMgrIp;
        SR_INT32        sts58kTrapRegMgrUdpPort;
        OctetString     *sts58kTrapRegCommunityStr;
        SR_INT32        sts58kTrapRegState;
        char            valid[1];
} sts58kTrapRegEntry_t;


#ifdef __cplusplus
}
#endif

/* DO NOT PUT ANYTHING AFTER THIS #endif */
#endif /* SR_SNMPTYPE_H */
